# Generated by Django 5.2.5 on 2025-09-25 14:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('classes_app', '0005_session'),
        ('notifications', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='announcement',
            options={'ordering': ['-pinned', '-publish_at', '-created_at']},
        ),
        migrations.AddField(
            model_name='announcement',
            name='classes',
            field=models.ManyToManyField(blank=True, help_text='Used when target=CLASS', to='classes_app.classprogram'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='delivery_channels',
            field=models.JSONField(default=list, help_text="e.g. ['DASH','EMAIL','SMS']"),
        ),
        migrations.AddField(
            model_name='announcement',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='announcement',
            name='links',
            field=models.JSONField(blank=True, help_text='List of {label, url} objects.', null=True),
        ),
        migrations.AddField(
            model_name='announcement',
            name='pinned',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='announcement',
            name='priority',
            field=models.CharField(choices=[('INFO', 'Info'), ('IMPORTANT', 'Important'), ('URGENT', 'Urgent')], default='INFO', max_length=20),
        ),
        migrations.AddField(
            model_name='announcement',
            name='publish_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='announcement',
            name='videos',
            field=models.JSONField(blank=True, help_text='List of video URLs (YouTube/Vimeo).', null=True),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='target',
            field=models.CharField(choices=[('ALL', 'All Users'), ('TEACHERS', 'Teachers'), ('PARENTS', 'Parents'), ('CLASS', 'Specific Classes')], default='ALL', max_length=20),
        ),
        migrations.CreateModel(
            name='AnnouncementAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='announcements/')),
                ('label', models.CharField(blank=True, max_length=255)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='notifications.announcement')),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(choices=[('LIKE', 'Like'), ('LOVE', 'Love'), ('ACK', 'Acknowledged')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='notifications.announcement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('announcement', 'user', 'reaction')},
            },
        ),
        migrations.CreateModel(
            name='AnnouncementRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reads', to='notifications.announcement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('announcement', 'user')},
            },
        ),
    ]
